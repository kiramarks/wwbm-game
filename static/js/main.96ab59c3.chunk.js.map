{"version":3,"sources":["assets/sounds/main_theme.mp3","assets/sounds/lets_play.mp3","assets/sounds/final_answer.mp3","assets/sounds/wrong_answer.mp3","assets/sounds/correct_answer.mp3","assets/sounds/winning_theme.mp3","assets/sounds/next.mp3","assets/sounds/easy.mp3","assets/sounds/medium.mp3","assets/sounds/hard.mp3","assets/sounds/hard_million.mp3","assets/images/hand.png","components/_ui/AppButton.tsx","components/Thumb.tsx","pages/Welcome.tsx","store/index.ts","utils/colors.ts","components/Winning.tsx","components/Winnings.tsx","components/Answer.tsx","components/Answers.tsx","components/GameOverModal.tsx","components/Sandwich.tsx","pages/Game.tsx","App.tsx","index.tsx"],"names":["module","exports","AppButton","props","type","disabled","text","style","onClick","btnClass","classNames","className","Thumb","src","require","alt","Welcome","useSound","MainTheme","volume","playMainTheme","stopPlayingMainTheme","stop","LetsPlay","playLetsPlay","isLetsPlaySoundPlaying","isPlaying","useEffect","handleStartGame","useCallback","console","log","to","pathname","state","Store","questions","currentQuestion","correctAnswer","activeAnswer","wrongAnswer","isCheckingAnswer","makeAutoObservable","this","data","question","value","answerIndex","StoreContext","createContext","StoreProvider","Provider","store","useStore","useContext","COLORS","Winning","observer","id","winning","itemStyle","winnings__item","itemTextColor","useMemo","key","color","Winnings","map","item","reverse","Answer","answer","index","handleSelect","generateAnswerLetter","Answers","stopNextRound","stopPlayingRoundSounds","CheckingAnswer","playCheckingAnswer","stopPlayCheckingAnswer","WrongAnswer","playWrongAnswer","CorrecAnswer","playCorrectAnswer","stopPlayCorrectAnswer","handleAnswerSelect","setActiveAnswer","setCheckingAnswer","setTimeout","correct","setCorrectAnswer","setWrongAnswer","answers","uuid","GameOverModal","visible","onCancel","winningTheme","playWinningTheme","stopWinningTheme","startGameAgain","setCurrentQuestion","deleteAnswersHighlights","handleCloseModal","modalStyle","modal","shouldConfettiRun","endTextBody","run","width","window","innerWidth","height","innerHeight","Sandwich","isWinningsOpen","toggleSandwich","href","cn","sandwich","e","preventDefault","Game","useState","modalVisible","setModalVisible","setWinningsOpen","nextRound","playNextRound","isNextRoundPlaying","easyRound","playEasyRound","stopEasyRound","mediumRound","playMediumRound","stopMediumRound","hardRound","playHardRound","stopHardRound","hardRoundMillion","playHardRoundMillion","stopHardRoundMillion","getData","winningsStyle","winnings","body","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96ab59c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main_theme.b3f5ba3c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lets_play.3d8ba0a6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/final_answer.b0092313.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong_answer.e55862ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/correct_answer.d27f45ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/winning_theme.b1412542.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.096233cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easy.d9cb525d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/medium.78fa5376.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hard.15496a46.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hard_million.eeb77fd7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hand.1f1e4da1.png\";","import React from 'react';\nimport classNames from 'classnames';\n\ntype AppButtonProps = {\n  type: 'button' | 'submit' | 'reset' | undefined;\n  text: string;\n  style?: string;\n  disabled?: boolean;\n  onClick?(): void;\n};\n\nexport const AppButton = (props: AppButtonProps) => {\n  const { type, disabled, text, style, onClick } = props;\n  const btnClass = classNames('btn-default', style);\n\n  return (\n    <button type={type} className={btnClass} disabled={disabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\n\nexport const Thumb = () => {\n  return (\n    <div className=\"thumb\">\n      <img className=\"thumb__image\" src={require('../assets/images/hand.png')} alt=\"thumb up\" />\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { AppButton } from '../components/_ui/AppButton';\nimport { Thumb } from '../components/Thumb';\nimport { Link } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport MainTheme from '../assets/sounds/main_theme.mp3';\nimport LetsPlay from '../assets/sounds/lets_play.mp3';\n\nexport const Welcome = () => {\n  const [playMainTheme, { stop: stopPlayingMainTheme }] = useSound(MainTheme, { volume: 0.1 });\n  const [playLetsPlay, { isPlaying: isLetsPlaySoundPlaying }] = useSound(LetsPlay, { volume: 0.1 });\n\n  useEffect(() => {\n    playMainTheme();\n  }, [playMainTheme]);\n\n  const handleStartGame = useCallback(() => {\n    stopPlayingMainTheme();\n    playLetsPlay();\n    console.log(isLetsPlaySoundPlaying);\n  }, [stopPlayingMainTheme, playLetsPlay, isLetsPlaySoundPlaying]);\n\n  return (\n    <div className=\"triangle-bg\">\n      <div className=\"welcome\">\n        <div className=\"welcome__container\">\n          <Thumb />\n          <div className=\"start\">\n            <h1 className=\"start__heading\">Who wants to be a millionaire?</h1>\n            <Link\n              to={{\n                pathname: '/questions',\n                state: { isLetsPlaySoundPlaying },\n              }}\n              className=\"link\"\n              onClick={handleStartGame}\n            >\n              <AppButton type=\"button\" text=\"Start\" />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { makeAutoObservable } from 'mobx';\nimport { createContext, useContext } from 'react';\n\nexport interface Question {\n  id: number;\n  body: string;\n  answers: string[];\n  correct: number;\n  winning: string;\n}\n\nclass Store {\n  questions: Question[] = [];\n  currentQuestion: Question | null = null;\n  correctAnswer: number | null = null;\n  activeAnswer: number | null = null;\n  wrongAnswer: number | null = null;\n  isCheckingAnswer = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  getData() {\n    const data = require('../utils/data.json');\n    this.questions = data.questions;\n  }\n\n  setCurrentQuestion(question: Question | null) {\n    this.currentQuestion = question;\n  }\n\n  setCheckingAnswer(value: boolean) {\n    this.isCheckingAnswer = value;\n  }\n\n  setCorrectAnswer(answerIndex: number | null) {\n    this.correctAnswer = answerIndex;\n  }\n\n  setActiveAnswer(answerIndex: number | null) {\n    this.activeAnswer = answerIndex;\n  }\n\n  setWrongAnswer(answerIndex: number | null) {\n    this.wrongAnswer = answerIndex;\n  }\n\n  deleteAnswersHighlights() {\n    this.activeAnswer = null;\n    this.correctAnswer = null;\n    this.wrongAnswer = null;\n  }\n}\n\nconst StoreContext = createContext<Store>({} as Store);\nexport const StoreProvider = StoreContext.Provider;\nexport const store = new Store();\nexport const useStore = (): Store => useContext(StoreContext);\n","export const COLORS = {\n  primary: '#ff8b37',\n  fontSecondary: '#d0d0d8',\n};\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useStore } from '../store';\nimport { COLORS } from '../utils/colors';\nimport { observer } from 'mobx-react';\n\ntype WinningProps = {\n  id: number;\n  winning: string;\n};\n\nexport const Winning = observer((props: WinningProps) => {\n  const Store = useStore();\n  const { id, winning } = props;\n\n  const itemStyle = classNames({\n    winnings__item: true,\n    'winnings__item--active': Store.currentQuestion?.id === id,\n  });\n\n  const itemTextColor = useMemo(\n    () =>\n      Store.currentQuestion?.id === id\n        ? COLORS.primary\n        : id < Store.currentQuestion?.id!\n        ? COLORS.fontSecondary\n        : 'black',\n    [Store.currentQuestion, id],\n  );\n\n  return (\n    <li key={id} className={itemStyle} style={{ color: itemTextColor }}>\n      {winning}\n    </li>\n  );\n});\n","import React from 'react';\nimport { Winning } from './Winning';\nimport { useStore } from '../store';\nimport { observer } from 'mobx-react';\n\nexport const Winnings = observer(() => {\n  const Store = useStore();\n\n  return (\n    <ul className=\"winnings__list\">\n      {Store.questions.map((item) => <Winning key={item.id} {...item} />).reverse()}\n    </ul>\n  );\n});\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { useStore } from '../store';\n\ntype AnswerProps = {\n  answer: string;\n  index: number;\n  handleSelect(answerIndex: number): void;\n};\n\nexport const Answer = observer(({ answer, index, handleSelect }: AnswerProps) => {\n  const Store = useStore();\n  const itemStyle = classNames({\n    answer: true,\n    'answer--selected': Store.activeAnswer === index,\n    'answer--correct': Store.correctAnswer === index,\n    'answer--wrong': Store.wrongAnswer === index,\n  });\n\n  const generateAnswerLetter = (index: number) => {\n    switch (index) {\n      case 0:\n        return 'A';\n      case 1:\n        return 'B';\n      case 2:\n        return 'C';\n      default:\n        return 'D';\n    }\n  };\n  const onClick = useCallback(() => handleSelect(index), [handleSelect, index]);\n\n  return (\n    <li className={itemStyle} onClick={onClick}>\n      <div className=\"answer__info\">\n        <p className=\"answer__letter\">{generateAnswerLetter(index)}</p>\n        <p className=\"answer__body\">{answer}</p>\n      </div>\n    </li>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { Answer } from './Answer';\nimport { v4 as uuid } from 'uuid';\nimport { useStore } from '../store';\nimport { observer } from 'mobx-react';\nimport useSound from 'use-sound';\nimport CheckingAnswer from '../assets/sounds/final_answer.mp3';\nimport WrongAnswer from '../assets/sounds/wrong_answer.mp3';\nimport CorrecAnswer from '../assets/sounds/correct_answer.mp3';\n\ntype AnswersProps = {\n  stopNextRound(id?: string): void;\n  stopPlayingRoundSounds(id?: string): void;\n};\n\nexport const Answers = observer(({ stopNextRound, stopPlayingRoundSounds }: AnswersProps) => {\n  const Store = useStore();\n\n  const [playCheckingAnswer, { stop: stopPlayCheckingAnswer }] = useSound(CheckingAnswer, {\n    volume: 0.15,\n  });\n\n  const [playWrongAnswer] = useSound(WrongAnswer, { volume: 0.15 });\n\n  const [playCorrectAnswer, { stop: stopPlayCorrectAnswer }] = useSound(CorrecAnswer, {\n    volume: 0.15,\n  });\n\n  useEffect(() => {\n    if (Store.correctAnswer === null) {\n      stopPlayCorrectAnswer();\n    }\n  }, [Store.correctAnswer, stopPlayCorrectAnswer]);\n\n  const handleAnswerSelect = (answerIndex: number) => {\n    if (Store.isCheckingAnswer || Store.correctAnswer !== null) {\n      return;\n    } else {\n      stopNextRound();\n      stopPlayingRoundSounds();\n      Store.setActiveAnswer(answerIndex);\n      Store.setCheckingAnswer(true);\n      playCheckingAnswer();\n\n      setTimeout(() => {\n        if (answerIndex === Store.currentQuestion?.correct) {\n          Store.setCorrectAnswer(answerIndex);\n          playCorrectAnswer();\n          stopPlayCheckingAnswer();\n          Store.setCheckingAnswer(false);\n        } else {\n          stopPlayCheckingAnswer();\n          Store.setWrongAnswer(answerIndex);\n          playWrongAnswer();\n          setTimeout(() => {\n            if (Store.currentQuestion) {\n              Store.setCorrectAnswer(Store.currentQuestion.correct);\n            }\n\n            Store.setCheckingAnswer(false);\n          }, 1700);\n        }\n      }, 5000);\n    }\n  };\n\n  return (\n    <ul className=\"answers\">\n      {Store.currentQuestion?.answers.map((answer, index) => (\n        <Answer key={uuid()} answer={answer} index={index} handleSelect={handleAnswerSelect} />\n      ))}\n    </ul>\n  );\n});\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { AppButton } from './_ui/AppButton';\nimport { Thumb } from './Thumb';\nimport { observer } from 'mobx-react';\nimport { useStore } from '../store';\nimport classNames from 'classnames';\nimport Confetti from 'react-confetti';\nimport useSound from 'use-sound';\nimport winningTheme from '../assets/sounds/winning_theme.mp3';\n\ntype GameOverModalProps = {\n  visible: boolean;\n  onCancel(): void;\n};\n\nexport const GameOverModal = observer(({ visible, onCancel }: GameOverModalProps) => {\n  const Store = useStore();\n\n  const [playWinningTheme, { stop: stopWinningTheme }] = useSound(winningTheme, { volume: 0.1 });\n\n  useEffect(() => {\n    if (visible && Store.currentQuestion?.id === 11) {\n      playWinningTheme();\n    }\n  }, [visible, Store.currentQuestion, playWinningTheme]);\n\n  const startGameAgain = useCallback(() => {\n    Store.setCurrentQuestion(Store.questions[0]);\n    Store.deleteAnswersHighlights();\n  }, [Store]);\n\n  const handleCloseModal = useCallback(() => {\n    startGameAgain();\n    onCancel();\n    stopWinningTheme();\n  }, [startGameAgain, onCancel, stopWinningTheme]);\n\n  const modalStyle = classNames({\n    modal: true,\n    'modal--opened': visible,\n  });\n\n  const shouldConfettiRun = visible && Store.currentQuestion?.id! === 11;\n  const endTextBody = useMemo(() => {\n    if (Store.currentQuestion?.id === 11) {\n      return `${Store.currentQuestion.winning} earned.`;\n    } else {\n      return Store.currentQuestion?.id! > 0\n        ? `${Store.questions[Store.currentQuestion?.id! - 1].winning} earned.`\n        : `Better luck next time!`;\n    }\n  }, [Store.currentQuestion, Store.questions]);\n\n  return (\n    <>\n      <div className={modalStyle}>\n        <Confetti run={shouldConfettiRun} width={window.innerWidth} height={window.innerHeight} />\n        <div className=\"modal__container\">\n          <Thumb />\n          <div className=\"end\">\n            <div className=\"end__text\">\n              {Store.currentQuestion?.id! > 0 && (\n                <h2 className=\"end__text__heading\">Total score:</h2>\n              )}\n              <h1 className=\"end__text__body\">{endTextBody}</h1>\n            </div>\n            <AppButton type=\"button\" text=\"Try again\" onClick={handleCloseModal} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\nimport cn from 'classnames';\n\ntype SandwichProps = {\n  isWinningsOpen: boolean;\n  toggleSandwich(): void;\n};\n\nexport const Sandwich = ({ isWinningsOpen, toggleSandwich }: SandwichProps) => {\n  return (\n    <a\n      href=\"!#\"\n      className={cn({\n        sandwich: true,\n        'sandwich--clicked': isWinningsOpen,\n      })}\n      onClick={(e) => {\n        e.preventDefault();\n        toggleSandwich();\n      }}\n    >\n      <span />\n      <span />\n      <span />\n    </a>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Winnings } from '../components/Winnings';\nimport { Answers } from '../components/Answers';\nimport { useStore } from '../store';\nimport { observer } from 'mobx-react';\nimport { GameOverModal } from '../components/GameOverModal';\nimport useSound from 'use-sound';\nimport classNames from 'classnames';\nimport { Sandwich } from '../components/Sandwich';\nimport nextRound from '../assets/sounds/next.mp3';\nimport easyRound from '../assets/sounds/easy.mp3';\nimport mediumRound from '../assets/sounds/medium.mp3';\nimport hardRound from '../assets/sounds/hard.mp3';\nimport hardRoundMillion from '../assets/sounds/hard_million.mp3';\n\nexport const Game = observer(() => {\n  const Store = useStore();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isWinningsOpen, setWinningsOpen] = useState(false);\n\n  const [\n    playNextRound,\n    { stop: stopNextRound, isPlaying: isNextRoundPlaying },\n  ] = useSound(nextRound, { volume: 0.1 });\n\n  const [playEasyRound, { stop: stopEasyRound }] = useSound(easyRound, { volume: 0.1 });\n\n  const [playMediumRound, { stop: stopMediumRound }] = useSound(mediumRound, { volume: 0.1 });\n\n  const [playHardRound, { stop: stopHardRound }] = useSound(hardRound, { volume: 0.1 });\n\n  const [playHardRoundMillion, { stop: stopHardRoundMillion }] = useSound(hardRoundMillion, {\n    volume: 0.1,\n  });\n\n  const stopPlayingRoundSounds = useCallback(() => {\n    stopEasyRound();\n    stopMediumRound();\n    stopHardRound();\n    stopHardRoundMillion();\n  }, [stopEasyRound, stopMediumRound, stopHardRound, stopHardRoundMillion]);\n\n  useEffect(() => {\n    if (Store.correctAnswer !== null || Store.isCheckingAnswer || Store.wrongAnswer !== null) {\n      stopPlayingRoundSounds();\n    }\n  }, [Store.correctAnswer, Store.isCheckingAnswer, Store.wrongAnswer, stopPlayingRoundSounds]);\n\n  useEffect(() => {\n    if (!isNextRoundPlaying) {\n      if (Store.currentQuestion?.id! < 4) {\n        playEasyRound();\n      }\n\n      if (Store.currentQuestion?.id! < 8 && Store.currentQuestion?.id! > 3) {\n        playMediumRound();\n      }\n\n      if (Store.currentQuestion?.id! < 11 && Store.currentQuestion?.id! > 7) {\n        playHardRound();\n      }\n\n      if (Store.currentQuestion?.id === 11) {\n        playHardRoundMillion();\n      }\n    }\n  }, [\n    isNextRoundPlaying,\n    Store.currentQuestion,\n    playEasyRound,\n    playMediumRound,\n    playHardRound,\n    playHardRoundMillion,\n  ]);\n\n  useEffect(() => {\n    Store.getData();\n    Store.setCurrentQuestion(Store.questions[0]);\n  }, [Store]);\n\n  useEffect(() => {\n    if (Store.wrongAnswer !== null) {\n      setTimeout(() => {\n        setModalVisible(true);\n      }, 4000);\n    }\n  }, [Store.wrongAnswer]);\n\n  useEffect(() => {\n    if (Store.correctAnswer !== null && Store.wrongAnswer === null) {\n      if (Store.currentQuestion?.id === 11) {\n        setTimeout(() => {\n          setModalVisible(true);\n          Store.setCorrectAnswer(null);\n        }, 5000);\n      } else {\n        setTimeout(() => {\n          playNextRound();\n          Store.setCurrentQuestion(Store.questions[Store.currentQuestion!.id + 1]);\n          Store.deleteAnswersHighlights();\n        }, 4000);\n      }\n    }\n  }, [\n    Store,\n    playNextRound,\n    Store.correctAnswer,\n    Store.questions,\n    Store.currentQuestion,\n    Store.deleteAnswersHighlights,\n    Store.setCurrentQuestion,\n  ]);\n\n  const toggleSandwich = useCallback(() => {\n    setWinningsOpen(!isWinningsOpen);\n  }, [isWinningsOpen]);\n\n  const winningsStyle = classNames({\n    winnings: true,\n    'winnings--opened': isWinningsOpen,\n  });\n\n  return (\n    <div className=\"game\">\n      <GameOverModal visible={modalVisible} onCancel={() => setModalVisible(false)} />\n      <section className=\"questions\">\n        <Sandwich isWinningsOpen={isWinningsOpen} toggleSandwich={toggleSandwich} />\n        <h2 className=\"questions__heading\">{Store.currentQuestion?.body}</h2>\n        <Answers stopNextRound={stopNextRound} stopPlayingRoundSounds={stopPlayingRoundSounds} />\n      </section>\n      <section className={winningsStyle}>\n        <Winnings />\n      </section>\n    </div>\n  );\n});\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Welcome } from './pages/Welcome';\nimport { Game } from './pages/Game';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Welcome} />\n      <Route exact path=\"/questions\" component={Game} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport { store, StoreProvider } from './store';\n\nReactDOM.render(\n  <StoreProvider value={store}>\n    <Router>\n      <App />\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}