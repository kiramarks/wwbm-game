{"version":3,"sources":["assets/sounds/main_theme.mp3","assets/sounds/final_answer.mp3","assets/sounds/wrong_answer.mp3","assets/sounds/correct_answer.mp3","assets/sounds/winning_theme.mp3","assets/sounds/next.mp3","assets/sounds/easy.mp3","assets/sounds/medium.mp3","assets/sounds/hard.mp3","assets/sounds/hard_million.mp3","assets/sounds/lets_play.mp3","assets/images/hand.png","components/_ui/AppButton.tsx","components/Thumb.tsx","pages/Welcome.tsx","store/index.ts","utils/colors.ts","components/Winning.tsx","components/Winnings.tsx","components/Answer.tsx","components/Answers.tsx","components/GameOverModal.tsx","components/Sandwich.tsx","pages/Game.tsx","App.tsx","index.tsx"],"names":["module","exports","AppButton","props","type","disabled","text","style","onClick","btnClass","classNames","className","Thumb","src","require","alt","Welcome","useSound","MainTheme","volume","playMainTheme","stopPlayingMainTheme","stop","useEffect","handleStartGame","useCallback","to","Store","questions","currentQuestion","correctAnswer","activeAnswer","wrongAnswer","isCheckingAnswer","isStartingGameSoundPlaying","makeAutoObservable","this","data","value","question","answerIndex","StoreContext","createContext","StoreProvider","Provider","gameStore","useStore","useContext","COLORS","Winning","observer","store","id","winning","itemStyle","winnings__item","itemTextColor","useMemo","key","color","Winnings","map","item","reverse","Answer","answer","index","handleSelect","generateAnswerLetter","Answers","stopNextRound","stopPlayingRoundSounds","CheckingAnswer","playCheckingAnswerSound","stopCheckingAnswerSound","WrongAnswer","playWrongAnswerSound","CorrectAnswer","playCorrectAnswerSound","stopCorrectAnswerSound","handleAnswerSelect","setActiveAnswer","setCheckingAnswer","setTimeout","correct","setCorrectAnswer","setWrongAnswer","answers","GameOverModal","visible","onCancel","winningTheme","playWinningTheme","stopWinningTheme","startGameAgain","setCurrentQuestion","deleteAnswersHighlights","handleCloseModal","modalStyle","modal","shouldConfettiRun","endTextBody","length","run","width","window","innerWidth","height","innerHeight","Sandwich","isWinningsOpen","toggleSandwich","href","cn","sandwich","e","preventDefault","Game","useState","modalVisible","setModalVisible","setWinningsOpen","startSound","playStartSound","isStartSoundPlaying","isPlaying","nextRound","playNextRound","isNextRoundPlaying","easyRound","soundEnabled","playEasyRound","stopEasyRound","isEasyRoundPlaying","mediumRound","playMediumRound","stopMediumRound","isMediumRoundPlaying","hardRound","playHardRound","stopHardRound","isHardRoundPlaying","hardRoundMillion","playFinalRound","stopHardRoundMillion","isFinalRoundPlaying","getData","winningsStyle","winnings","body","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bcad66a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main_theme.b3f5ba3c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/final_answer.b0092313.mp3\";","module.exports = __webpack_public_path__ + \"static/media/wrong_answer.e55862ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/correct_answer.d27f45ad.mp3\";","module.exports = __webpack_public_path__ + \"static/media/winning_theme.b1412542.mp3\";","module.exports = __webpack_public_path__ + \"static/media/next.096233cf.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easy.d9cb525d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/medium.78fa5376.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hard.15496a46.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hard_million.eeb77fd7.mp3\";","module.exports = __webpack_public_path__ + \"static/media/lets_play.3d8ba0a6.mp3\";","module.exports = __webpack_public_path__ + \"static/media/hand.1f1e4da1.png\";","import React from 'react';\nimport classNames from 'classnames';\n\ntype AppButtonProps = {\n  type: 'button' | 'submit' | 'reset' | undefined;\n  text: string;\n  style?: string;\n  disabled?: boolean;\n  onClick?(): void;\n};\n\nexport const AppButton = (props: AppButtonProps) => {\n  const { type, disabled, text, style, onClick } = props;\n  const btnClass = classNames('btn-default', style);\n\n  return (\n    <button type={type} className={btnClass} disabled={disabled} onClick={onClick}>\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\n\nexport const Thumb = () => {\n  return (\n    <div className=\"thumb\">\n      <img className=\"thumb__image\" src={require('../assets/images/hand.png')} alt=\"thumb up\" />\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { AppButton } from '../components/_ui/AppButton';\nimport { Thumb } from '../components/Thumb';\nimport { Link } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport MainTheme from '../assets/sounds/main_theme.mp3';\n\nexport const Welcome = () => {\n  const [playMainTheme, { stop: stopPlayingMainTheme }] = useSound(MainTheme, { volume: 0.1 });\n\n  useEffect(() => {\n    playMainTheme();\n  }, [playMainTheme]);\n\n  const handleStartGame = useCallback(() => {\n    stopPlayingMainTheme();\n  }, [stopPlayingMainTheme]);\n\n  return (\n    <div className=\"triangle-bg\">\n      <div className=\"welcome\">\n        <div className=\"welcome__container\">\n          <Thumb />\n          <div className=\"start\">\n            <h1 className=\"start__heading\">Who wants to be a millionaire?</h1>\n            <Link to=\"/questions\" className=\"link\" onClick={handleStartGame}>\n              <AppButton type=\"button\" text=\"Start\" />\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { makeAutoObservable } from 'mobx';\nimport { createContext, useContext } from 'react';\nimport data from '../utils/data.json';\n\nexport interface Question {\n  id: number;\n  body: string;\n  answers: string[];\n  correct: number;\n  winning: string;\n}\n\nclass Store {\n  questions: Question[] = [];\n  currentQuestion: Question | null = null;\n  correctAnswer: number | null = null;\n  activeAnswer: number | null = null;\n  wrongAnswer: number | null = null;\n  isCheckingAnswer = false;\n  isStartingGameSoundPlaying = false;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  getData() {\n    this.questions = data.questions;\n  }\n\n  setStartingGameSoundPlaying(value: boolean) {\n    this.isStartingGameSoundPlaying = value;\n  }\n\n  setCurrentQuestion(question: Question | null) {\n    this.currentQuestion = question;\n  }\n\n  setCheckingAnswer(value: boolean) {\n    this.isCheckingAnswer = value;\n  }\n\n  setCorrectAnswer(answerIndex: number | null) {\n    this.correctAnswer = answerIndex;\n  }\n\n  setActiveAnswer(answerIndex: number | null) {\n    this.activeAnswer = answerIndex;\n  }\n\n  setWrongAnswer(answerIndex: number | null) {\n    this.wrongAnswer = answerIndex;\n  }\n\n  deleteAnswersHighlights() {\n    this.activeAnswer = null;\n    this.correctAnswer = null;\n    this.wrongAnswer = null;\n  }\n}\n\nconst StoreContext = createContext<Store>({} as Store);\nexport const StoreProvider = StoreContext.Provider;\nexport const gameStore = new Store();\nexport const useStore = (): Store => useContext(StoreContext);\n","export const COLORS = {\n  primary: '#ff8b37',\n  fontSecondary: '#d0d0d8',\n};\n","import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { useStore } from '../store';\nimport { COLORS } from '../utils/colors';\nimport { observer } from 'mobx-react';\n\ntype WinningProps = {\n  id: number;\n  winning: string;\n};\n\nexport const Winning = observer((props: WinningProps) => {\n  const store = useStore();\n  const { id, winning } = props;\n\n  const itemStyle = classNames({\n    winnings__item: true,\n    'winnings__item--active': store.currentQuestion?.id === id,\n  });\n\n  const itemTextColor = useMemo(\n    () => {\n      if (store.currentQuestion?.id === id) {\n        return COLORS.primary;\n      } else if (id < store.currentQuestion?.id!) {\n        return COLORS.fontSecondary;\n      } else {\n        return 'black';\n      }\n    },\n    [store.currentQuestion, id],\n  );\n\n  return (\n    <li key={id} className={itemStyle} style={{ color: itemTextColor }}>\n      {winning}\n    </li>\n  );\n});\n","import React from 'react';\nimport { Winning } from './Winning';\nimport { useStore } from '../store';\nimport { observer } from 'mobx-react';\n\nexport const Winnings = observer(() => {\n  const store = useStore();\n\n  return (\n    <ul className=\"winnings__list\">\n      {store.questions.map((item) => <Winning key={item.id} {...item} />).reverse()}\n    </ul>\n  );\n});\n","import React, { useCallback } from 'react';\nimport classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport { useStore } from '../store';\n\ntype AnswerProps = {\n  answer: string;\n  index: number;\n  handleSelect(answerIndex: number): void;\n};\n\nexport const Answer = observer(({ answer, index, handleSelect }: AnswerProps) => {\n  const store = useStore();\n  const itemStyle = classNames({\n    answer: true,\n    'answer--selected': store.activeAnswer === index,\n    'answer--correct': store.correctAnswer === index,\n    'answer--wrong': store.wrongAnswer === index,\n  });\n\n  const generateAnswerLetter = (index: number) => {\n    switch (index) {\n      case 0:\n        return 'A';\n      case 1:\n        return 'B';\n      case 2:\n        return 'C';\n      default:\n        return 'D';\n    }\n  };\n  const onClick = useCallback(() => handleSelect(index), [handleSelect, index]);\n\n  return (\n    <li className={itemStyle} onClick={onClick}>\n      <div className=\"answer__info\">\n        <p className=\"answer__letter\">{generateAnswerLetter(index)}</p>\n        <p className=\"answer__body\">{answer}</p>\n      </div>\n    </li>\n  );\n});\n","import React, { useEffect } from 'react';\nimport { Answer } from './Answer';\nimport { useStore } from '../store';\nimport { observer } from 'mobx-react';\nimport useSound from 'use-sound';\nimport CheckingAnswer from '../assets/sounds/final_answer.mp3';\nimport WrongAnswer from '../assets/sounds/wrong_answer.mp3';\nimport CorrectAnswer from '../assets/sounds/correct_answer.mp3';\n\ntype AnswersProps = {\n  stopNextRound(id?: string): void;\n  stopPlayingRoundSounds(id?: string): void;\n};\n\nexport const Answers = observer(({ stopNextRound, stopPlayingRoundSounds }: AnswersProps) => {\n  const store = useStore();\n\n  const [playCheckingAnswerSound, { stop: stopCheckingAnswerSound }] = useSound(CheckingAnswer, {\n    volume: 0.15,\n  });\n\n  const [playWrongAnswerSound] = useSound(WrongAnswer, { volume: 0.15 });\n\n  const [playCorrectAnswerSound, { stop: stopCorrectAnswerSound }] = useSound(CorrectAnswer, {\n    volume: 0.15,\n  });\n\n  useEffect(() => {\n    if (store.correctAnswer === null) {\n      stopCorrectAnswerSound();\n    }\n  }, [store.correctAnswer, stopCorrectAnswerSound]);\n\n  const handleAnswerSelect = (answerIndex: number) => {\n    if (store.isCheckingAnswer || store.correctAnswer !== null) {\n      return;\n    } else {\n      stopNextRound();\n      stopPlayingRoundSounds();\n      store.setActiveAnswer(answerIndex);\n      store.setCheckingAnswer(true);\n      playCheckingAnswerSound();\n\n      setTimeout(() => {\n        if (answerIndex === store.currentQuestion?.correct) {\n          store.setCorrectAnswer(answerIndex);\n          playCorrectAnswerSound();\n          stopCheckingAnswerSound();\n          store.setCheckingAnswer(false);\n        } else {\n          stopCheckingAnswerSound();\n          store.setWrongAnswer(answerIndex);\n          playWrongAnswerSound();\n          setTimeout(() => {\n            if (store.currentQuestion) {\n              store.setCorrectAnswer(store.currentQuestion.correct);\n            }\n\n            store.setCheckingAnswer(false);\n          }, 1700);\n        }\n      }, 5000);\n    }\n  };\n\n  return (\n    <ul className=\"answers\">\n      {store.currentQuestion?.answers.map((answer, index) => (\n        <Answer key={answer} answer={answer} index={index} handleSelect={handleAnswerSelect} />\n      ))}\n    </ul>\n  );\n});\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { AppButton } from './_ui/AppButton';\nimport { Thumb } from './Thumb';\nimport { observer } from 'mobx-react';\nimport { useStore } from '../store';\nimport classNames from 'classnames';\nimport Confetti from 'react-confetti';\nimport useSound from 'use-sound';\nimport winningTheme from '../assets/sounds/winning_theme.mp3';\n\ntype GameOverModalProps = {\n  visible: boolean;\n  onCancel(): void;\n};\n\nexport const GameOverModal = observer(({ visible, onCancel }: GameOverModalProps) => {\n  const store = useStore();\n\n  const [playWinningTheme, { stop: stopWinningTheme }] = useSound(winningTheme, { volume: 0.1 });\n\n  useEffect(() => {\n    if (visible && store.currentQuestion?.id === 11) {\n      playWinningTheme();\n    }\n  }, [visible, store.currentQuestion, playWinningTheme]);\n\n  const startGameAgain = useCallback(() => {\n    store.setCurrentQuestion(store.questions[0]);\n    store.deleteAnswersHighlights();\n  }, [store]);\n\n  const handleCloseModal = useCallback(() => {\n    startGameAgain();\n    onCancel();\n    stopWinningTheme();\n  }, [startGameAgain, onCancel, stopWinningTheme]);\n\n  const modalStyle = classNames({\n    modal: true,\n    'modal--opened': visible,\n  });\n\n  const shouldConfettiRun = visible && store.currentQuestion?.id! === 11;\n  const endTextBody = useMemo(() => {\n    if (store.currentQuestion?.id === store.questions.length - 1) {\n      if (store.wrongAnswer === null) {\n        return `${store.questions[store.questions.length - 1].winning} earned.`;\n      } else {\n        return `${store.questions[store.currentQuestion?.id! - 1].winning} earned.`;\n      }\n    } else {\n      return store.currentQuestion?.id! > 0\n        ? `${store.questions[store.currentQuestion?.id! - 1].winning} earned.`\n        : `Better luck next time!`;\n    }\n  }, [store.currentQuestion, store.questions, store.wrongAnswer]);\n\n  return (\n    <>\n      <div className={modalStyle}>\n        <Confetti run={shouldConfettiRun} width={window.innerWidth} height={window.innerHeight} />\n        <div className=\"modal__container\">\n          <Thumb />\n          <div className=\"end\">\n            <div className=\"end__text\">\n              {store.currentQuestion?.id! > 0 && (\n                <h2 className=\"end__text__heading\">Total score:</h2>\n              )}\n              <h1 className=\"end__text__body\">{endTextBody}</h1>\n            </div>\n            <AppButton type=\"button\" text=\"Try again\" onClick={handleCloseModal} />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n","import React from 'react';\nimport cn from 'classnames';\n\ntype SandwichProps = {\n  isWinningsOpen: boolean;\n  toggleSandwich(): void;\n};\n\nexport const Sandwich = ({ isWinningsOpen, toggleSandwich }: SandwichProps) => {\n  return (\n    <a\n      href=\"!#\"\n      className={cn({\n        sandwich: true,\n        'sandwich--clicked': isWinningsOpen,\n      })}\n      onClick={(e) => {\n        e.preventDefault();\n        toggleSandwich();\n      }}\n    >\n      <span />\n      <span />\n      <span />\n    </a>\n  );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Winnings } from '../components/Winnings';\nimport { Answers } from '../components/Answers';\nimport { useStore } from '../store';\nimport { observer } from 'mobx-react';\nimport { GameOverModal } from '../components/GameOverModal';\nimport useSound from 'use-sound';\nimport classNames from 'classnames';\nimport { Sandwich } from '../components/Sandwich';\nimport nextRound from '../assets/sounds/next.mp3';\nimport easyRound from '../assets/sounds/easy.mp3';\nimport mediumRound from '../assets/sounds/medium.mp3';\nimport hardRound from '../assets/sounds/hard.mp3';\nimport hardRoundMillion from '../assets/sounds/hard_million.mp3';\nimport startSound from '../assets/sounds/lets_play.mp3';\n\nexport const Game = observer(() => {\n  const store = useStore();\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isWinningsOpen, setWinningsOpen] = useState(false);\n\n  const [playStartSound, {isPlaying: isStartSoundPlaying}] = useSound(startSound, {volume: 0.1});\n\n  const [\n    playNextRound,\n    {stop: stopNextRound, isPlaying: isNextRoundPlaying},\n  ] = useSound(nextRound, {volume: 0.1});\n\n  const [\n    playEasyRound,\n    {stop: stopEasyRound, isPlaying: isEasyRoundPlaying},\n  ] = useSound(easyRound, {volume: 0.1, soundEnabled: !isStartSoundPlaying});\n\n  const [\n    playMediumRound,\n    {stop: stopMediumRound, isPlaying: isMediumRoundPlaying},\n  ] = useSound(mediumRound, {volume: 0.1, soundEnabled: !isStartSoundPlaying});\n\n  const [\n    playHardRound,\n    {stop: stopHardRound, isPlaying: isHardRoundPlaying},\n  ] = useSound(hardRound, {volume: 0.1, soundEnabled: !isStartSoundPlaying});\n\n  const [\n    playFinalRound,\n    {stop: stopHardRoundMillion, isPlaying: isFinalRoundPlaying},\n  ] = useSound(hardRoundMillion, {\n    volume: 0.1,\n  });\n\n  const stopPlayingRoundSounds = useCallback(() => {\n    stopEasyRound();\n    stopMediumRound();\n    stopHardRound();\n    stopHardRoundMillion();\n  }, [stopEasyRound, stopMediumRound, stopHardRound, stopHardRoundMillion]);\n\n  useEffect(() => {\n    if (\n        store.correctAnswer !== null\n        || store.wrongAnswer !== null\n    ) {\n      stopPlayingRoundSounds();\n    }\n  }, [store.correctAnswer, store.wrongAnswer, stopPlayingRoundSounds]);\n\n  useEffect(() => {\n    if (\n        (store.isCheckingAnswer && isEasyRoundPlaying) ||\n        (store.isCheckingAnswer && isMediumRoundPlaying) ||\n        (store.isCheckingAnswer && isHardRoundPlaying) ||\n        (store.isCheckingAnswer && isFinalRoundPlaying)\n    ) {\n      stopPlayingRoundSounds();\n    }\n  }, [\n    store.isCheckingAnswer,\n    isEasyRoundPlaying,\n    isMediumRoundPlaying,\n    isHardRoundPlaying,\n    stopPlayingRoundSounds,\n    isFinalRoundPlaying,\n  ]);\n\n  useEffect(() => {\n    if (isNextRoundPlaying) {\n      stopPlayingRoundSounds();\n    }\n  }, [isNextRoundPlaying, stopPlayingRoundSounds]);\n\n  useEffect(() => {\n    if (!isNextRoundPlaying) {\n      if (store.currentQuestion?.id! < 4) {\n        playEasyRound();\n      } else if (store.currentQuestion?.id! < 8) {\n        playMediumRound();\n      } else if (store.currentQuestion?.id! < 11) {\n        playHardRound();\n      } else if (store.currentQuestion?.id === 11) {\n        playFinalRound();\n      }\n    }\n  }, [\n    store.currentQuestion, isNextRoundPlaying, playEasyRound,\n    playMediumRound, playHardRound, playFinalRound,\n  ]);\n\n  useEffect(() => {\n    if (store.currentQuestion?.id === 0) {\n      playStartSound();\n    }\n  }, [playStartSound]);\n\n  useEffect(() => {\n    store.getData();\n    store.setCurrentQuestion(store.questions[0]);\n  }, [store]);\n\n  useEffect(() => {\n    if (store.wrongAnswer !== null) {\n      setTimeout(() => {\n        setModalVisible(true);\n      }, 4000);\n    }\n  }, [store.wrongAnswer]);\n\n  useEffect(() => {\n    if (store.correctAnswer !== null && store.wrongAnswer === null) {\n      if (store.currentQuestion?.id === 11) {\n        setTimeout(() => {\n          setModalVisible(true);\n          store.setCorrectAnswer(null);\n        }, 5000);\n      } else {\n        setTimeout(() => {\n          playNextRound();\n          store.setCurrentQuestion(store.questions[store.currentQuestion!.id + 1]);\n          store.deleteAnswersHighlights();\n        }, 4000);\n      }\n    }\n  }, [\n    store,\n    playNextRound,\n    store.correctAnswer,\n    store.questions,\n    store.currentQuestion,\n    store.deleteAnswersHighlights,\n    store.setCurrentQuestion,\n  ]);\n\n  const toggleSandwich = useCallback(() => {\n    setWinningsOpen(!isWinningsOpen);\n  }, [isWinningsOpen]);\n\n  const winningsStyle = classNames({\n    winnings: true,\n    'winnings--opened': isWinningsOpen,\n  });\n\n  return (\n      <div className=\"game\">\n        <GameOverModal visible={modalVisible} onCancel={() => setModalVisible(false)} />\n        <section className=\"questions\">\n          <Sandwich isWinningsOpen={isWinningsOpen} toggleSandwich={toggleSandwich} />\n          <h2 className=\"questions__heading\">{store.currentQuestion?.body}</h2>\n          <Answers stopNextRound={stopNextRound} stopPlayingRoundSounds={stopPlayingRoundSounds} />\n        </section>\n        <section className={winningsStyle}>\n          <Winnings />\n        </section>\n      </div>\n  );\n});\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Welcome } from './pages/Welcome';\nimport { Game } from './pages/Game';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Welcome} />\n      <Route exact path=\"/questions\" component={Game} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport { gameStore, StoreProvider } from './store';\n\nReactDOM.render(\n  <StoreProvider value={gameStore}>\n    <Router>\n      <App />\n    </Router>\n  </StoreProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}